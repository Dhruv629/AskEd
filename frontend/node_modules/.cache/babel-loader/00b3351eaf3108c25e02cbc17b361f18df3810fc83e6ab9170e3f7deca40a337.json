{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bdhru\\\\OneDrive\\\\Desktop\\\\backend\\\\frontend\\\\src\\\\components\\\\Flashcards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Add custom CSS for 3D flip effect\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flipCardStyles = `\n  .perspective-1000 {\n    perspective: 1000px;\n  }\n  .transform-style-preserve-3d {\n    transform-style: preserve-3d;\n  }\n  .backface-hidden {\n    backface-visibility: hidden;\n  }\n  .rotate-y-180 {\n    transform: rotateY(180deg);\n  }\n`;\nconst Flashcards = ({\n  initialContent = '',\n  initialFilename = null\n}) => {\n  _s();\n  var _practiceCards$curren, _practiceCards$curren2;\n  const [filename, setFilename] = useState(initialFilename || '');\n  const [generatedFlashcards, setGeneratedFlashcards] = useState({}); // { sessionId: { cards: [], timestamp: Date, sessionId: string } }\n  const [savedFlashcards, setSavedFlashcards] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [showFolderPrompt, setShowFolderPrompt] = useState(false);\n  const [folderName, setFolderName] = useState('');\n  const [currentFolder, setCurrentFolder] = useState(null);\n  const [practiceMode, setPracticeMode] = useState(false);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [practiceCards, setPracticeCards] = useState([]);\n  const [expandedFolders, setExpandedFolders] = useState(new Set());\n  const [selectedGeneratedSet, setSelectedGeneratedSet] = useState(null);\n\n  // Auto-generate flashcards when initial content is provided\n  useEffect(() => {\n    if (initialContent) {\n      // Clear any previous errors\n      setError('');\n\n      // If filename is provided, use PDF generation, otherwise use text generation\n      if (initialFilename) {\n        handleGenerateFromPDF(initialFilename);\n      } else {\n        handleGenerateFromText(initialContent);\n      }\n    }\n  }, [initialContent, initialFilename]);\n\n  // Get authentication token\n  const getAuthToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  // Add authorization header to axios requests\n  const getAuthHeaders = () => {\n    const token = getAuthToken();\n    return {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n  };\n\n  // Load user's saved flashcards and folders on component mount\n  useEffect(() => {\n    loadSavedFlashcards();\n  }, []);\n\n  // Inject custom CSS for flip card effect\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.textContent = flipCardStyles;\n    document.head.appendChild(style);\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n  const loadSavedFlashcards = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/db/flashcards', {\n        headers: getAuthHeaders()\n      });\n      setSavedFlashcards(response.data);\n\n      // Extract unique folders\n      const uniqueFolders = [...new Set(response.data.map(card => card.folder).filter(Boolean))];\n      setFolders(uniqueFolders);\n    } catch (err) {\n      console.error('Failed to load saved flashcards:', err);\n    }\n  };\n  const handleGenerateFromText = async text => {\n    if (!text.trim()) {\n      setError('No text provided for flashcard generation');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const res = await axios.post('http://localhost:8080/ai/flashcards-from-text', {\n        inputText: text\n      });\n      const data = res.data;\n      let flashcards;\n      if (Array.isArray(data)) {\n        flashcards = data;\n      } else {\n        flashcards = JSON.parse(data);\n      }\n      // Store with session ID and formatted timestamp\n      const sessionId = `session_${Date.now()}`;\n      const now = new Date();\n      const formattedTimestamp = now.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      setGeneratedFlashcards(prev => ({\n        ...prev,\n        [sessionId]: {\n          cards: flashcards,\n          timestamp: now,\n          formattedTimestamp: formattedTimestamp,\n          sessionId: sessionId\n        }\n      }));\n    } catch (err) {\n      console.error(err);\n      setError('Failed to generate flashcards from text');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGenerateFromPDF = async filename => {\n    if (!filename.trim()) {\n      setError('No filename provided');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const res = await axios.get(`http://localhost:8080/ai/flashcards`, {\n        params: {\n          filename\n        }\n      });\n      const data = res.data;\n      let flashcards;\n      if (Array.isArray(data)) {\n        flashcards = data;\n      } else {\n        flashcards = JSON.parse(data);\n      }\n      // Store with session ID and formatted timestamp\n      const sessionId = `session_${Date.now()}`;\n      const now = new Date();\n      const formattedTimestamp = now.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      setGeneratedFlashcards(prev => ({\n        ...prev,\n        [sessionId]: {\n          cards: flashcards,\n          timestamp: now,\n          formattedTimestamp: formattedTimestamp,\n          sessionId: sessionId\n        }\n      }));\n    } catch (err) {\n      console.error(err);\n      setError('Failed to generate flashcards from PDF');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveFlashcards = async timestamp => {\n    const generatedSet = generatedFlashcards[timestamp];\n    if (!generatedSet || generatedSet.cards.length === 0) {\n      setError('No flashcards to save');\n      return;\n    }\n    setError(''); // Clear any previous errors\n    setSelectedGeneratedSet(timestamp);\n    setShowFolderPrompt(true);\n  };\n  const handleConfirmSave = async () => {\n    if (!folderName.trim()) {\n      setError('Please enter a folder name');\n      return;\n    }\n    if (!selectedGeneratedSet) {\n      setError('No flashcards selected for saving');\n      return;\n    }\n    setSaving(true);\n    setError('');\n    try {\n      const generatedSet = generatedFlashcards[selectedGeneratedSet];\n\n      // Add folder information to flashcards\n      const flashcardsWithFolder = generatedSet.cards.map(card => ({\n        ...card,\n        folder: folderName.trim()\n      }));\n      console.log('Saving flashcards:', flashcardsWithFolder);\n      console.log('Auth headers:', getAuthHeaders());\n      const response = await axios.post('http://localhost:8080/db/flashcards', flashcardsWithFolder, {\n        headers: getAuthHeaders()\n      });\n      console.log('Save response:', response.data);\n\n      // Reload saved flashcards\n      await loadSavedFlashcards();\n\n      // Remove the saved set from generated flashcards\n      setGeneratedFlashcards(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[selectedGeneratedSet];\n        return newState;\n      });\n\n      // Reset state\n      setSelectedGeneratedSet(null);\n      setFolderName('');\n      setShowFolderPrompt(false);\n      alert('Flashcards saved successfully!');\n    } catch (err) {\n      var _err$response, _err$response2, _err$response3;\n      console.error('Failed to save flashcards:', err);\n      console.error('Error response:', (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n      console.error('Error status:', (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status);\n\n      // Show more specific error message\n      let errorMessage = 'Failed to save flashcards. Please try again.';\n      if ((_err$response3 = err.response) !== null && _err$response3 !== void 0 && _err$response3.data) {\n        errorMessage = `Failed to save flashcards: ${err.response.data}`;\n      } else if (err.message) {\n        errorMessage = `Failed to save flashcards: ${err.message}`;\n      }\n      setError(errorMessage);\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleDeleteFlashcard = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/db/flashcards/${id}`, {\n        headers: getAuthHeaders()\n      });\n\n      // Reload saved flashcards\n      await loadSavedFlashcards();\n    } catch (err) {\n      console.error('Failed to delete flashcard:', err);\n      setError('Failed to delete flashcard');\n    }\n  };\n  const handleDeleteFolder = async folder => {\n    const cardsInFolder = getFlashcardsByFolder(folder);\n    if (cardsInFolder.length === 0) return;\n    const confirmed = window.confirm(`Are you sure you want to delete the folder \"${folder}\" and all ${cardsInFolder.length} flashcards in it? This action cannot be undone.`);\n    if (!confirmed) return;\n    try {\n      // Delete all flashcards in the folder\n      const deletePromises = cardsInFolder.map(card => axios.delete(`http://localhost:8080/db/flashcards/${card.id}`, {\n        headers: getAuthHeaders()\n      }));\n      await Promise.all(deletePromises);\n\n      // Reload saved flashcards\n      await loadSavedFlashcards();\n\n      // Remove from expanded folders if it was expanded\n      const newExpandedFolders = new Set(expandedFolders);\n      newExpandedFolders.delete(folder);\n      setExpandedFolders(newExpandedFolders);\n    } catch (err) {\n      console.error('Failed to delete folder:', err);\n      setError('Failed to delete folder. Please try again.');\n    }\n  };\n  const handleDeleteGeneratedSet = timestamp => {\n    const confirmed = window.confirm('Are you sure you want to delete this generated flashcard set? This action cannot be undone.');\n    if (!confirmed) return;\n    setGeneratedFlashcards(prev => {\n      const newState = {\n        ...prev\n      };\n      delete newState[timestamp];\n      return newState;\n    });\n  };\n\n  // Cleanup generated flashcards on logout\n  useEffect(() => {\n    const handleLogout = () => {\n      setGeneratedFlashcards({});\n      setSelectedGeneratedSet(null);\n    };\n\n    // Listen for logout events (you can trigger this from your auth component)\n    window.addEventListener('logout', handleLogout);\n    return () => {\n      window.removeEventListener('logout', handleLogout);\n    };\n  }, []);\n\n  // Utility function to trigger logout cleanup (call this from your auth component)\n  const triggerLogoutCleanup = () => {\n    window.dispatchEvent(new Event('logout'));\n  };\n\n  // NOTE: To trigger logout cleanup from your auth component, call:\n  // window.dispatchEvent(new Event('logout'));\n\n  const getFlashcardsByFolder = folder => {\n    return savedFlashcards.filter(card => card.folder === folder);\n  };\n\n  // Practice Mode Functions\n  const startPracticeMode = (folder = null) => {\n    let cardsToPractice;\n    if (folder) {\n      cardsToPractice = getFlashcardsByFolder(folder);\n    } else {\n      cardsToPractice = savedFlashcards;\n    }\n    if (cardsToPractice.length === 0) {\n      setError('No flashcards to practice!');\n      return;\n    }\n    setPracticeCards(cardsToPractice);\n    setCurrentCardIndex(0);\n    setIsFlipped(false);\n    setPracticeMode(true);\n  };\n  const stopPracticeMode = () => {\n    setPracticeMode(false);\n    setCurrentCardIndex(0);\n    setIsFlipped(false);\n    setPracticeCards([]);\n  };\n  const nextCard = () => {\n    if (currentCardIndex < practiceCards.length - 1) {\n      setCurrentCardIndex(currentCardIndex + 1);\n      setIsFlipped(false);\n    }\n  };\n  const previousCard = () => {\n    if (currentCardIndex > 0) {\n      setCurrentCardIndex(currentCardIndex - 1);\n      setIsFlipped(false);\n    }\n  };\n  const flipCard = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const toggleFolder = folder => {\n    const newExpandedFolders = new Set(expandedFolders);\n    if (newExpandedFolders.has(folder)) {\n      newExpandedFolders.delete(folder);\n    } else {\n      newExpandedFolders.add(folder);\n    }\n    setExpandedFolders(newExpandedFolders);\n  };\n\n  // Keyboard shortcuts for practice mode\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!practiceMode) return;\n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault();\n          previousCard();\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          nextCard();\n          break;\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          flipCard();\n          break;\n        case 'Escape':\n          e.preventDefault();\n          stopPracticeMode();\n          break;\n      }\n    };\n    if (practiceMode) {\n      document.addEventListener('keydown', handleKeyPress);\n      return () => document.removeEventListener('keydown', handleKeyPress);\n    }\n  }, [practiceMode, currentCardIndex, isFlipped]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [practiceMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-3xl shadow-2xl max-w-2xl mx-4 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-extrabold text-blue-700\",\n            children: \"Practice Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopPracticeMode,\n            className: \"text-gray-500 hover:text-gray-700 text-2xl font-bold\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-4 text-sm text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click the card or press Space/Enter to flip \\u2022 Use arrow keys to navigate \\u2022 Press Escape to exit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: [\"Card \", currentCardIndex + 1, \" of \", practiceCards.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-gray-200 rounded-full h-2 mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-600 h-2 rounded-full transition-all duration-300\",\n              style: {\n                width: `${(currentCardIndex + 1) / practiceCards.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-full h-64 cursor-pointer perspective-1000\",\n            onClick: flipCard,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `absolute inset-0 w-full h-full transition-transform duration-500 transform-style-preserve-3d ${isFlipped ? 'rotate-y-180' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute inset-0 w-full h-full backface-hidden\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full h-full bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl shadow-xl flex items-center justify-center p-6 text-white\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm font-semibold mb-2 opacity-80\",\n                      children: \"QUESTION\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xl font-bold leading-relaxed\",\n                      children: (_practiceCards$curren = practiceCards[currentCardIndex]) === null || _practiceCards$curren === void 0 ? void 0 : _practiceCards$curren.question\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm mt-4 opacity-70\",\n                      children: \"Click to see answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute inset-0 w-full h-full backface-hidden rotate-y-180\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full h-full bg-gradient-to-br from-green-500 to-green-600 rounded-2xl shadow-xl flex items-center justify-center p-6 text-white\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm font-semibold mb-2 opacity-80\",\n                      children: \"ANSWER\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xl font-bold leading-relaxed\",\n                      children: (_practiceCards$curren2 = practiceCards[currentCardIndex]) === null || _practiceCards$curren2 === void 0 ? void 0 : _practiceCards$curren2.answer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm mt-4 opacity-70\",\n                      children: \"Click to see question\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 515,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: previousCard,\n            disabled: currentCardIndex === 0,\n            className: \"bg-gray-500 hover:bg-gray-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-6 py-3 rounded-lg font-semibold transition-all duration-200 flex items-center gap-2\",\n            children: \"\\u2190 Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: flipCard,\n              className: \"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-200 shadow-lg\",\n              children: isFlipped ? 'Show Question' : 'Show Answer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextCard,\n            disabled: currentCardIndex === practiceCards.length - 1,\n            className: \"bg-gray-500 hover:bg-gray-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-6 py-3 rounded-lg font-semibold transition-all duration-200 flex items-center gap-2\",\n            children: \"Next \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-white/90 border rounded-2xl shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-extrabold mb-6 text-blue-700 tracking-tight\",\n        children: \"Generate Flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold mb-1 text-blue-900\",\n          children: \"PDF Filename (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter filename (e.g. file.pdf) or leave empty for text input\",\n          value: filename,\n          onChange: e => setFilename(e.target.value),\n          className: \"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: filename ? 'Will generate flashcards from PDF content' : 'Enter text below to generate flashcards from text'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold mb-1 text-blue-900\",\n          children: \"Text Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Paste your text here to generate flashcards...\",\n          className: \"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition\",\n          rows: 4,\n          id: \"textInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: \"Paste text content to generate flashcards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const text = document.getElementById('textInput').value;\n            if (filename) {\n              handleGenerateFromPDF(filename);\n            } else if (text.trim()) {\n              handleGenerateFromText(text);\n            } else {\n              setError('Please provide either a PDF filename or text content');\n            }\n          },\n          className: \"bg-blue-600 hover:bg-blue-700 transition-all duration-200 text-white px-6 py-2 rounded-lg font-semibold shadow flex items-center gap-2 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 disabled:cursor-not-allowed\",\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"animate-spin h-5 w-5 text-white\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              className: \"opacity-25\",\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\",\n              stroke: \"currentColor\",\n              strokeWidth: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              className: \"opacity-75\",\n              fill: \"currentColor\",\n              d: \"M4 12a8 8 0 018-8v8z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this), loading ? 'Generating...' : 'Generate Flashcards']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mt-2 font-semibold\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 19\n      }, this), Object.keys(generatedFlashcards).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-4 text-blue-700 text-lg\",\n          children: \"Generated Flashcards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: Object.entries(generatedFlashcards).sort(([a], [b]) => b - a) // Sort by timestamp, newest first\n          .map(([timestamp, set]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-blue-200 rounded-xl p-4 bg-blue-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-semibold text-blue-800\",\n                  children: [\"Generated on \", set.formattedTimestamp]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: [set.cards.length, \" flashcards\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSaveFlashcards(timestamp),\n                  className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition-all duration-200 flex items-center gap-2\",\n                  children: \"\\uD83D\\uDCBE Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteGeneratedSet(timestamp),\n                  className: \"bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded-lg font-semibold transition-all duration-200\",\n                  title: \"Delete this set\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid gap-4 grid-cols-1 sm:grid-cols-2\",\n              children: set.cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border-2 border-blue-200 p-4 rounded-xl bg-white shadow-inner\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-semibold text-blue-800 mb-2\",\n                  children: [\"Q: \", card.question]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-green-800\",\n                  children: [\"A: \", card.answer]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 21\n            }, this)]\n          }, timestamp, true, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this), showFolderPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow-xl max-w-md mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4 text-blue-700\",\n          children: \"Save Flashcards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-gray-600\",\n          children: \"Enter a folder name to organize your flashcards:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: folderName,\n          onChange: e => setFolderName(e.target.value),\n          placeholder: \"e.g., Biology Chapter 1, Math Formulas, etc.\",\n          className: \"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowFolderPrompt(false);\n              setFolderName('');\n            },\n            className: \"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-semibold transition\",\n            disabled: saving,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirmSave,\n            className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition flex items-center gap-2\",\n            disabled: saving,\n            children: [saving && /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"animate-spin h-4 w-4 text-white\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                className: \"opacity-25\",\n                cx: \"12\",\n                cy: \"12\",\n                r: \"10\",\n                stroke: \"currentColor\",\n                strokeWidth: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                className: \"opacity-75\",\n                fill: \"currentColor\",\n                d: \"M4 12a8 8 0 018-8v8z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 19\n            }, this), saving ? 'Saving...' : 'Save']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-white/90 border rounded-2xl shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-extrabold text-blue-700 tracking-tight\",\n          children: \"My Saved Flashcards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this), savedFlashcards.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startPracticeMode(),\n          className: \"bg-purple-600 hover:bg-purple-700 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-200 flex items-center gap-2 shadow-lg\",\n          children: \"\\uD83C\\uDFAF Practice All Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this), savedFlashcards.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 text-center py-8\",\n        children: \"No saved flashcards yet. Generate and save some flashcards to see them here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: folders.map(folder => {\n          const cardCount = getFlashcardsByFolder(folder).length;\n          const isExpanded = expandedFolders.has(folder);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-blue-200 rounded-xl p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleFolder(folder),\n                className: \"flex items-center gap-3 text-left hover:bg-blue-50 p-2 rounded-lg transition-all duration-200 flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `transform transition-transform duration-200 ${isExpanded ? 'rotate-90' : ''}`,\n                  children: \"\\u25B6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-lg font-bold text-blue-700\",\n                    children: folder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-600\",\n                    children: [cardCount, \" card\", cardCount !== 1 ? 's' : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 734,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startPracticeMode(folder),\n                  className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition-all duration-200 flex items-center gap-2\",\n                  children: \"\\uD83C\\uDFAF Practice\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteFolder(folder),\n                  className: \"bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded-lg font-semibold transition-all duration-200 flex items-center gap-1\",\n                  title: \"Delete folder and all cards\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 19\n            }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 grid gap-4 grid-cols-1 sm:grid-cols-2\",\n              children: getFlashcardsByFolder(folder).map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border-2 border-blue-200 p-4 rounded-xl bg-blue-50 shadow-inner relative\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteFlashcard(card.id),\n                  className: \"absolute top-2 right-2 text-red-600 hover:text-red-800 font-bold text-lg\",\n                  title: \"Delete flashcard\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-semibold text-blue-800 mb-2\",\n                  children: [\"Q: \", card.question]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-green-800\",\n                  children: [\"A: \", card.answer]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 27\n                }, this)]\n              }, card.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 21\n            }, this)]\n          }, folder, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this);\n};\n_s(Flashcards, \"fsoSZOLKymBfsgeFPqPWdP5+qV0=\");\n_c = Flashcards;\nexport default Flashcards;\nvar _c;\n$RefreshReg$(_c, \"Flashcards\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","flipCardStyles","Flashcards","initialContent","initialFilename","_s","_practiceCards$curren","_practiceCards$curren2","filename","setFilename","generatedFlashcards","setGeneratedFlashcards","savedFlashcards","setSavedFlashcards","folders","setFolders","error","setError","loading","setLoading","saving","setSaving","showFolderPrompt","setShowFolderPrompt","folderName","setFolderName","currentFolder","setCurrentFolder","practiceMode","setPracticeMode","currentCardIndex","setCurrentCardIndex","isFlipped","setIsFlipped","practiceCards","setPracticeCards","expandedFolders","setExpandedFolders","Set","selectedGeneratedSet","setSelectedGeneratedSet","handleGenerateFromPDF","handleGenerateFromText","getAuthToken","localStorage","getItem","getAuthHeaders","token","loadSavedFlashcards","style","document","createElement","textContent","head","appendChild","removeChild","response","get","headers","data","uniqueFolders","map","card","folder","filter","Boolean","err","console","text","trim","res","post","inputText","flashcards","Array","isArray","JSON","parse","sessionId","Date","now","formattedTimestamp","toLocaleString","year","month","day","hour","minute","prev","cards","timestamp","params","handleSaveFlashcards","generatedSet","length","handleConfirmSave","flashcardsWithFolder","log","newState","alert","_err$response","_err$response2","_err$response3","status","errorMessage","message","handleDeleteFlashcard","id","delete","handleDeleteFolder","cardsInFolder","getFlashcardsByFolder","confirmed","window","confirm","deletePromises","Promise","all","newExpandedFolders","handleDeleteGeneratedSet","handleLogout","addEventListener","removeEventListener","triggerLogoutCleanup","dispatchEvent","Event","startPracticeMode","cardsToPractice","stopPracticeMode","nextCard","previousCard","flipCard","toggleFolder","has","add","handleKeyPress","e","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","width","question","answer","disabled","type","placeholder","value","onChange","target","rows","getElementById","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","Object","keys","entries","sort","a","b","set","title","index","cardCount","isExpanded","_c","$RefreshReg$"],"sources":["C:/Users/bdhru/OneDrive/Desktop/backend/frontend/src/components/Flashcards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Add custom CSS for 3D flip effect\r\nconst flipCardStyles = `\r\n  .perspective-1000 {\r\n    perspective: 1000px;\r\n  }\r\n  .transform-style-preserve-3d {\r\n    transform-style: preserve-3d;\r\n  }\r\n  .backface-hidden {\r\n    backface-visibility: hidden;\r\n  }\r\n  .rotate-y-180 {\r\n    transform: rotateY(180deg);\r\n  }\r\n`;\r\n\r\nconst Flashcards = ({ initialContent = '', initialFilename = null }) => {\r\n  const [filename, setFilename] = useState(initialFilename || '');\r\n  const [generatedFlashcards, setGeneratedFlashcards] = useState({}); // { sessionId: { cards: [], timestamp: Date, sessionId: string } }\r\n  const [savedFlashcards, setSavedFlashcards] = useState([]);\r\n  const [folders, setFolders] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [showFolderPrompt, setShowFolderPrompt] = useState(false);\r\n  const [folderName, setFolderName] = useState('');\r\n  const [currentFolder, setCurrentFolder] = useState(null);\r\n  const [practiceMode, setPracticeMode] = useState(false);\r\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const [practiceCards, setPracticeCards] = useState([]);\r\n  const [expandedFolders, setExpandedFolders] = useState(new Set());\r\n  const [selectedGeneratedSet, setSelectedGeneratedSet] = useState(null);\r\n\r\n  // Auto-generate flashcards when initial content is provided\r\n  useEffect(() => {\r\n    if (initialContent) {\r\n      // Clear any previous errors\r\n      setError('');\r\n      \r\n      // If filename is provided, use PDF generation, otherwise use text generation\r\n      if (initialFilename) {\r\n        handleGenerateFromPDF(initialFilename);\r\n      } else {\r\n        handleGenerateFromText(initialContent);\r\n      }\r\n    }\r\n  }, [initialContent, initialFilename]);\r\n\r\n  // Get authentication token\r\n  const getAuthToken = () => {\r\n    return localStorage.getItem('token');\r\n  };\r\n\r\n  // Add authorization header to axios requests\r\n  const getAuthHeaders = () => {\r\n    const token = getAuthToken();\r\n    return {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    };\r\n  };\r\n\r\n  // Load user's saved flashcards and folders on component mount\r\n  useEffect(() => {\r\n    loadSavedFlashcards();\r\n  }, []);\r\n\r\n  // Inject custom CSS for flip card effect\r\n  useEffect(() => {\r\n    const style = document.createElement('style');\r\n    style.textContent = flipCardStyles;\r\n    document.head.appendChild(style);\r\n    \r\n    return () => {\r\n      document.head.removeChild(style);\r\n    };\r\n  }, []);\r\n\r\n  const loadSavedFlashcards = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/db/flashcards', {\r\n        headers: getAuthHeaders()\r\n      });\r\n      setSavedFlashcards(response.data);\r\n      \r\n      // Extract unique folders\r\n      const uniqueFolders = [...new Set(response.data.map(card => card.folder).filter(Boolean))];\r\n      setFolders(uniqueFolders);\r\n    } catch (err) {\r\n      console.error('Failed to load saved flashcards:', err);\r\n    }\r\n  };\r\n\r\n  const handleGenerateFromText = async (text) => {\r\n    if (!text.trim()) {\r\n      setError('No text provided for flashcard generation');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const res = await axios.post('http://localhost:8080/ai/flashcards-from-text', {\r\n        inputText: text\r\n      });\r\n      \r\n      const data = res.data;\r\n      let flashcards;\r\n      if (Array.isArray(data)) {\r\n        flashcards = data;\r\n      } else {\r\n        flashcards = JSON.parse(data);\r\n      }\r\n      // Store with session ID and formatted timestamp\r\n      const sessionId = `session_${Date.now()}`;\r\n      const now = new Date();\r\n      const formattedTimestamp = now.toLocaleString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n      setGeneratedFlashcards(prev => ({\r\n        ...prev,\r\n        [sessionId]: {\r\n          cards: flashcards,\r\n          timestamp: now,\r\n          formattedTimestamp: formattedTimestamp,\r\n          sessionId: sessionId\r\n        }\r\n      }));\r\n      \r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Failed to generate flashcards from text');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateFromPDF = async (filename) => {\r\n    if (!filename.trim()) {\r\n      setError('No filename provided');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const res = await axios.get(`http://localhost:8080/ai/flashcards`, {\r\n        params: { filename },\r\n      });\r\n      \r\n      const data = res.data;\r\n      let flashcards;\r\n      if (Array.isArray(data)) {\r\n        flashcards = data;\r\n      } else {\r\n        flashcards = JSON.parse(data);\r\n      }\r\n      // Store with session ID and formatted timestamp\r\n      const sessionId = `session_${Date.now()}`;\r\n      const now = new Date();\r\n      const formattedTimestamp = now.toLocaleString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n      setGeneratedFlashcards(prev => ({\r\n        ...prev,\r\n        [sessionId]: {\r\n          cards: flashcards,\r\n          timestamp: now,\r\n          formattedTimestamp: formattedTimestamp,\r\n          sessionId: sessionId\r\n        }\r\n      }));\r\n      \r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Failed to generate flashcards from PDF');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveFlashcards = async (timestamp) => {\r\n    const generatedSet = generatedFlashcards[timestamp];\r\n    if (!generatedSet || generatedSet.cards.length === 0) {\r\n      setError('No flashcards to save');\r\n      return;\r\n    }\r\n\r\n    setError(''); // Clear any previous errors\r\n    setSelectedGeneratedSet(timestamp);\r\n    setShowFolderPrompt(true);\r\n  };\r\n\r\n  const handleConfirmSave = async () => {\r\n    if (!folderName.trim()) {\r\n      setError('Please enter a folder name');\r\n      return;\r\n    }\r\n\r\n    if (!selectedGeneratedSet) {\r\n      setError('No flashcards selected for saving');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    setError('');\r\n    try {\r\n      const generatedSet = generatedFlashcards[selectedGeneratedSet];\r\n      \r\n      // Add folder information to flashcards\r\n      const flashcardsWithFolder = generatedSet.cards.map(card => ({\r\n        ...card,\r\n        folder: folderName.trim()\r\n      }));\r\n\r\n      console.log('Saving flashcards:', flashcardsWithFolder);\r\n      console.log('Auth headers:', getAuthHeaders());\r\n\r\n      const response = await axios.post('http://localhost:8080/db/flashcards', flashcardsWithFolder, {\r\n        headers: getAuthHeaders()\r\n      });\r\n      \r\n      console.log('Save response:', response.data);\r\n      \r\n      // Reload saved flashcards\r\n      await loadSavedFlashcards();\r\n      \r\n      // Remove the saved set from generated flashcards\r\n      setGeneratedFlashcards(prev => {\r\n        const newState = { ...prev };\r\n        delete newState[selectedGeneratedSet];\r\n        return newState;\r\n      });\r\n      \r\n      // Reset state\r\n      setSelectedGeneratedSet(null);\r\n      setFolderName('');\r\n      setShowFolderPrompt(false);\r\n      \r\n      alert('Flashcards saved successfully!');\r\n    } catch (err) {\r\n      console.error('Failed to save flashcards:', err);\r\n      console.error('Error response:', err.response?.data);\r\n      console.error('Error status:', err.response?.status);\r\n      \r\n      // Show more specific error message\r\n      let errorMessage = 'Failed to save flashcards. Please try again.';\r\n      if (err.response?.data) {\r\n        errorMessage = `Failed to save flashcards: ${err.response.data}`;\r\n      } else if (err.message) {\r\n        errorMessage = `Failed to save flashcards: ${err.message}`;\r\n      }\r\n      \r\n      setError(errorMessage);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteFlashcard = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/db/flashcards/${id}`, {\r\n        headers: getAuthHeaders()\r\n      });\r\n      \r\n      // Reload saved flashcards\r\n      await loadSavedFlashcards();\r\n    } catch (err) {\r\n      console.error('Failed to delete flashcard:', err);\r\n      setError('Failed to delete flashcard');\r\n    }\r\n  };\r\n\r\n  const handleDeleteFolder = async (folder) => {\r\n    const cardsInFolder = getFlashcardsByFolder(folder);\r\n    if (cardsInFolder.length === 0) return;\r\n\r\n    const confirmed = window.confirm(\r\n      `Are you sure you want to delete the folder \"${folder}\" and all ${cardsInFolder.length} flashcards in it? This action cannot be undone.`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    try {\r\n      // Delete all flashcards in the folder\r\n      const deletePromises = cardsInFolder.map(card => \r\n        axios.delete(`http://localhost:8080/db/flashcards/${card.id}`, {\r\n          headers: getAuthHeaders()\r\n        })\r\n      );\r\n      \r\n      await Promise.all(deletePromises);\r\n      \r\n      // Reload saved flashcards\r\n      await loadSavedFlashcards();\r\n      \r\n      // Remove from expanded folders if it was expanded\r\n      const newExpandedFolders = new Set(expandedFolders);\r\n      newExpandedFolders.delete(folder);\r\n      setExpandedFolders(newExpandedFolders);\r\n      \r\n    } catch (err) {\r\n      console.error('Failed to delete folder:', err);\r\n      setError('Failed to delete folder. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteGeneratedSet = (timestamp) => {\r\n    const confirmed = window.confirm(\r\n      'Are you sure you want to delete this generated flashcard set? This action cannot be undone.'\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    setGeneratedFlashcards(prev => {\r\n      const newState = { ...prev };\r\n      delete newState[timestamp];\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  // Cleanup generated flashcards on logout\r\n  useEffect(() => {\r\n    const handleLogout = () => {\r\n      setGeneratedFlashcards({});\r\n      setSelectedGeneratedSet(null);\r\n    };\r\n\r\n    // Listen for logout events (you can trigger this from your auth component)\r\n    window.addEventListener('logout', handleLogout);\r\n    \r\n    return () => {\r\n      window.removeEventListener('logout', handleLogout);\r\n    };\r\n  }, []);\r\n\r\n  // Utility function to trigger logout cleanup (call this from your auth component)\r\n  const triggerLogoutCleanup = () => {\r\n    window.dispatchEvent(new Event('logout'));\r\n  };\r\n\r\n  // NOTE: To trigger logout cleanup from your auth component, call:\r\n  // window.dispatchEvent(new Event('logout'));\r\n\r\n  const getFlashcardsByFolder = (folder) => {\r\n    return savedFlashcards.filter(card => card.folder === folder);\r\n  };\r\n\r\n  // Practice Mode Functions\r\n  const startPracticeMode = (folder = null) => {\r\n    let cardsToPractice;\r\n    if (folder) {\r\n      cardsToPractice = getFlashcardsByFolder(folder);\r\n    } else {\r\n      cardsToPractice = savedFlashcards;\r\n    }\r\n    \r\n    if (cardsToPractice.length === 0) {\r\n      setError('No flashcards to practice!');\r\n      return;\r\n    }\r\n    \r\n    setPracticeCards(cardsToPractice);\r\n    setCurrentCardIndex(0);\r\n    setIsFlipped(false);\r\n    setPracticeMode(true);\r\n  };\r\n\r\n  const stopPracticeMode = () => {\r\n    setPracticeMode(false);\r\n    setCurrentCardIndex(0);\r\n    setIsFlipped(false);\r\n    setPracticeCards([]);\r\n  };\r\n\r\n  const nextCard = () => {\r\n    if (currentCardIndex < practiceCards.length - 1) {\r\n      setCurrentCardIndex(currentCardIndex + 1);\r\n      setIsFlipped(false);\r\n    }\r\n  };\r\n\r\n  const previousCard = () => {\r\n    if (currentCardIndex > 0) {\r\n      setCurrentCardIndex(currentCardIndex - 1);\r\n      setIsFlipped(false);\r\n    }\r\n  };\r\n\r\n  const flipCard = () => {\r\n    setIsFlipped(!isFlipped);\r\n  };\r\n\r\n  const toggleFolder = (folder) => {\r\n    const newExpandedFolders = new Set(expandedFolders);\r\n    if (newExpandedFolders.has(folder)) {\r\n      newExpandedFolders.delete(folder);\r\n    } else {\r\n      newExpandedFolders.add(folder);\r\n    }\r\n    setExpandedFolders(newExpandedFolders);\r\n  };\r\n\r\n  // Keyboard shortcuts for practice mode\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if (!practiceMode) return;\r\n      \r\n      switch(e.key) {\r\n        case 'ArrowLeft':\r\n          e.preventDefault();\r\n          previousCard();\r\n          break;\r\n        case 'ArrowRight':\r\n          e.preventDefault();\r\n          nextCard();\r\n          break;\r\n        case ' ':\r\n        case 'Enter':\r\n          e.preventDefault();\r\n          flipCard();\r\n          break;\r\n        case 'Escape':\r\n          e.preventDefault();\r\n          stopPracticeMode();\r\n          break;\r\n      }\r\n    };\r\n\r\n    if (practiceMode) {\r\n      document.addEventListener('keydown', handleKeyPress);\r\n      return () => document.removeEventListener('keydown', handleKeyPress);\r\n    }\r\n  }, [practiceMode, currentCardIndex, isFlipped]);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Practice Mode Section */}\r\n      {practiceMode && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-8 rounded-3xl shadow-2xl max-w-2xl mx-4 w-full\">\r\n            {/* Header */}\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-2xl font-extrabold text-blue-700\">Practice Mode</h2>\r\n              <button\r\n                onClick={stopPracticeMode}\r\n                className=\"text-gray-500 hover:text-gray-700 text-2xl font-bold\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            {/* Instructions */}\r\n            <div className=\"text-center mb-4 text-sm text-gray-600\">\r\n              <p>Click the card or press Space/Enter to flip • Use arrow keys to navigate • Press Escape to exit</p>\r\n            </div>\r\n\r\n            {/* Progress */}\r\n            <div className=\"text-center mb-6\">\r\n              <p className=\"text-gray-600\">\r\n                Card {currentCardIndex + 1} of {practiceCards.length}\r\n              </p>\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\r\n                <div \r\n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                  style={{ width: `${((currentCardIndex + 1) / practiceCards.length) * 100}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Flip Card */}\r\n            <div className=\"mb-8\">\r\n              <div \r\n                className=\"relative w-full h-64 cursor-pointer perspective-1000\"\r\n                onClick={flipCard}\r\n              >\r\n                <div \r\n                  className={`absolute inset-0 w-full h-full transition-transform duration-500 transform-style-preserve-3d ${\r\n                    isFlipped ? 'rotate-y-180' : ''\r\n                  }`}\r\n                >\r\n                  {/* Front of card (Question) */}\r\n                  <div className=\"absolute inset-0 w-full h-full backface-hidden\">\r\n                    <div className=\"w-full h-full bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl shadow-xl flex items-center justify-center p-6 text-white\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-sm font-semibold mb-2 opacity-80\">QUESTION</div>\r\n                        <div className=\"text-xl font-bold leading-relaxed\">\r\n                          {practiceCards[currentCardIndex]?.question}\r\n                        </div>\r\n                        <div className=\"text-sm mt-4 opacity-70\">Click to see answer</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Back of card (Answer) */}\r\n                  <div className=\"absolute inset-0 w-full h-full backface-hidden rotate-y-180\">\r\n                    <div className=\"w-full h-full bg-gradient-to-br from-green-500 to-green-600 rounded-2xl shadow-xl flex items-center justify-center p-6 text-white\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-sm font-semibold mb-2 opacity-80\">ANSWER</div>\r\n                        <div className=\"text-xl font-bold leading-relaxed\">\r\n                          {practiceCards[currentCardIndex]?.answer}\r\n                        </div>\r\n                        <div className=\"text-sm mt-4 opacity-70\">Click to see question</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Navigation Controls */}\r\n            <div className=\"flex justify-between items-center\">\r\n              <button\r\n                onClick={previousCard}\r\n                disabled={currentCardIndex === 0}\r\n                className=\"bg-gray-500 hover:bg-gray-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-6 py-3 rounded-lg font-semibold transition-all duration-200 flex items-center gap-2\"\r\n              >\r\n                ← Previous\r\n              </button>\r\n\r\n              <div className=\"text-center\">\r\n                <button\r\n                  onClick={flipCard}\r\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-200 shadow-lg\"\r\n                >\r\n                  {isFlipped ? 'Show Question' : 'Show Answer'}\r\n                </button>\r\n              </div>\r\n\r\n              <button\r\n                onClick={nextCard}\r\n                disabled={currentCardIndex === practiceCards.length - 1}\r\n                className=\"bg-gray-500 hover:bg-gray-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-6 py-3 rounded-lg font-semibold transition-all duration-200 flex items-center gap-2\"\r\n              >\r\n                Next →\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Generate Flashcards Section */}\r\n      <div className=\"p-6 bg-white/90 border rounded-2xl shadow-xl\">\r\n        <h2 className=\"text-2xl font-extrabold mb-6 text-blue-700 tracking-tight\">Generate Flashcards</h2>\r\n        \r\n        <div className=\"mb-6\">\r\n          <label className=\"block font-semibold mb-1 text-blue-900\">PDF Filename (Optional)</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter filename (e.g. file.pdf) or leave empty for text input\"\r\n            value={filename}\r\n            onChange={(e) => setFilename(e.target.value)}\r\n            className=\"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 mt-1\">\r\n            {filename ? 'Will generate flashcards from PDF content' : 'Enter text below to generate flashcards from text'}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <label className=\"block font-semibold mb-1 text-blue-900\">Text Content</label>\r\n          <textarea\r\n            placeholder=\"Paste your text here to generate flashcards...\"\r\n            className=\"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition\"\r\n            rows={4}\r\n            id=\"textInput\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 mt-1\">Paste text content to generate flashcards</p>\r\n        </div>\r\n        \r\n        <div className=\"flex gap-4\">\r\n          <button\r\n            onClick={() => {\r\n              const text = document.getElementById('textInput').value;\r\n              if (filename) {\r\n                handleGenerateFromPDF(filename);\r\n              } else if (text.trim()) {\r\n                handleGenerateFromText(text);\r\n              } else {\r\n                setError('Please provide either a PDF filename or text content');\r\n              }\r\n            }}\r\n            className=\"bg-blue-600 hover:bg-blue-700 transition-all duration-200 text-white px-6 py-2 rounded-lg font-semibold shadow flex items-center gap-2 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 disabled:cursor-not-allowed\"\r\n            disabled={loading}\r\n          >\r\n            {loading && (\r\n              <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8z\"></path>\r\n              </svg>\r\n            )}\r\n            {loading ? 'Generating...' : 'Generate Flashcards'}\r\n          </button>\r\n        </div>\r\n\r\n        {error && <p className=\"text-red-600 mt-2 font-semibold\">{error}</p>}\r\n        \r\n        {Object.keys(generatedFlashcards).length > 0 && (\r\n          <div className=\"mt-8\">\r\n            <h3 className=\"font-bold mb-4 text-blue-700 text-lg\">Generated Flashcards</h3>\r\n            <div className=\"space-y-4\">\r\n              {Object.entries(generatedFlashcards)\r\n                .sort(([a], [b]) => b - a) // Sort by timestamp, newest first\r\n                .map(([timestamp, set]) => (\r\n                  <div key={timestamp} className=\"border-2 border-blue-200 rounded-xl p-4 bg-blue-50\">\r\n                    <div className=\"flex justify-between items-center mb-4\">\r\n                      <div>\r\n                        <h4 className=\"font-semibold text-blue-800\">\r\n                          Generated on {set.formattedTimestamp}\r\n                        </h4>\r\n                        <p className=\"text-sm text-gray-600\">{set.cards.length} flashcards</p>\r\n                      </div>\r\n                      <div className=\"flex gap-2\">\r\n                        <button\r\n                          onClick={() => handleSaveFlashcards(timestamp)}\r\n                          className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition-all duration-200 flex items-center gap-2\"\r\n                        >\r\n                          💾 Save\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteGeneratedSet(timestamp)}\r\n                          className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded-lg font-semibold transition-all duration-200\"\r\n                          title=\"Delete this set\"\r\n                        >\r\n                          🗑️\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"grid gap-4 grid-cols-1 sm:grid-cols-2\">\r\n                      {set.cards.map((card, index) => (\r\n                        <div key={index} className=\"border-2 border-blue-200 p-4 rounded-xl bg-white shadow-inner\">\r\n                          <p className=\"font-semibold text-blue-800 mb-2\">Q: {card.question}</p>\r\n                          <p className=\"text-green-800\">A: {card.answer}</p>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n\r\n\r\n      {/* Folder Name Prompt Modal */}\r\n      {showFolderPrompt && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-2xl shadow-xl max-w-md mx-4\">\r\n            <h3 className=\"text-xl font-bold mb-4 text-blue-700\">Save Flashcards</h3>\r\n            <p className=\"mb-4 text-gray-600\">\r\n              Enter a folder name to organize your flashcards:\r\n            </p>\r\n            <input\r\n              type=\"text\"\r\n              value={folderName}\r\n              onChange={(e) => setFolderName(e.target.value)}\r\n              placeholder=\"e.g., Biology Chapter 1, Math Formulas, etc.\"\r\n              className=\"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition mb-4\"\r\n            />\r\n            <div className=\"flex gap-4\">\r\n              <button\r\n                onClick={() => {\r\n                  setShowFolderPrompt(false);\r\n                  setFolderName('');\r\n                }}\r\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-semibold transition\"\r\n                disabled={saving}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleConfirmSave}\r\n                className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition flex items-center gap-2\"\r\n                disabled={saving}\r\n              >\r\n                {saving && (\r\n                  <svg className=\"animate-spin h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8z\"></path>\r\n                  </svg>\r\n                )}\r\n                {saving ? 'Saving...' : 'Save'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Saved Flashcards Section */}\r\n      <div className=\"p-6 bg-white/90 border rounded-2xl shadow-xl\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-extrabold text-blue-700 tracking-tight\">My Saved Flashcards</h2>\r\n          {savedFlashcards.length > 0 && (\r\n            <button\r\n              onClick={() => startPracticeMode()}\r\n              className=\"bg-purple-600 hover:bg-purple-700 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-200 flex items-center gap-2 shadow-lg\"\r\n            >\r\n              🎯 Practice All Cards\r\n            </button>\r\n          )}\r\n        </div>\r\n        \r\n        {savedFlashcards.length === 0 ? (\r\n          <p className=\"text-gray-600 text-center py-8\">No saved flashcards yet. Generate and save some flashcards to see them here!</p>\r\n        ) : (\r\n          <div className=\"space-y-6\">\r\n            {folders.map((folder) => {\r\n              const cardCount = getFlashcardsByFolder(folder).length;\r\n              const isExpanded = expandedFolders.has(folder);\r\n              \r\n              return (\r\n                <div key={folder} className=\"border-2 border-blue-200 rounded-xl p-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <button\r\n                      onClick={() => toggleFolder(folder)}\r\n                      className=\"flex items-center gap-3 text-left hover:bg-blue-50 p-2 rounded-lg transition-all duration-200 flex-1\"\r\n                    >\r\n                      <div className={`transform transition-transform duration-200 ${isExpanded ? 'rotate-90' : ''}`}>\r\n                        ▶\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"text-lg font-bold text-blue-700\">{folder}</h3>\r\n                        <p className=\"text-sm text-gray-600\">{cardCount} card{cardCount !== 1 ? 's' : ''}</p>\r\n                      </div>\r\n                    </button>\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        onClick={() => startPracticeMode(folder)}\r\n                        className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition-all duration-200 flex items-center gap-2\"\r\n                      >\r\n                        🎯 Practice\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteFolder(folder)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded-lg font-semibold transition-all duration-200 flex items-center gap-1\"\r\n                        title=\"Delete folder and all cards\"\r\n                      >\r\n                        🗑️\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {isExpanded && (\r\n                    <div className=\"mt-4 grid gap-4 grid-cols-1 sm:grid-cols-2\">\r\n                      {getFlashcardsByFolder(folder).map((card) => (\r\n                        <div key={card.id} className=\"border-2 border-blue-200 p-4 rounded-xl bg-blue-50 shadow-inner relative\">\r\n                          <button\r\n                            onClick={() => handleDeleteFlashcard(card.id)}\r\n                            className=\"absolute top-2 right-2 text-red-600 hover:text-red-800 font-bold text-lg\"\r\n                            title=\"Delete flashcard\"\r\n                          >\r\n                            ×\r\n                          </button>\r\n                          <p className=\"font-semibold text-blue-800 mb-2\">Q: {card.question}</p>\r\n                          <p className=\"text-green-800\">A: {card.answer}</p>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flashcards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}