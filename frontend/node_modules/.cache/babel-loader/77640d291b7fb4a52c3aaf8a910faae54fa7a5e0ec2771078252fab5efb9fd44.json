{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bdhru\\\\OneDrive\\\\Desktop\\\\backend\\\\frontend\\\\src\\\\components\\\\Flashcards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flashcards = ({\n  initialContent = '',\n  initialFilename = null\n}) => {\n  _s();\n  const [filename, setFilename] = useState(initialFilename || '');\n  const [flashcards, setFlashcards] = useState([]);\n  const [savedFlashcards, setSavedFlashcards] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [showGeneratePrompt, setShowGeneratePrompt] = useState(false);\n  const [showFolderPrompt, setShowFolderPrompt] = useState(false);\n  const [folderName, setFolderName] = useState('');\n  const [currentFolder, setCurrentFolder] = useState(null);\n  const [practiceMode, setPracticeMode] = useState(false);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [practiceCards, setPracticeCards] = useState([]);\n\n  // Auto-generate flashcards when initial content is provided\n  useEffect(() => {\n    if (initialContent && !flashcards.length) {\n      handleGenerateFromText(initialContent);\n    }\n  }, [initialContent]);\n\n  // Get authentication token\n  const getAuthToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  // Add authorization header to axios requests\n  const getAuthHeaders = () => {\n    const token = getAuthToken();\n    return {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n  };\n\n  // Load user's saved flashcards and folders on component mount\n  useEffect(() => {\n    loadSavedFlashcards();\n  }, []);\n  const loadSavedFlashcards = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/db/flashcards', {\n        headers: getAuthHeaders()\n      });\n      setSavedFlashcards(response.data);\n\n      // Extract unique folders\n      const uniqueFolders = [...new Set(response.data.map(card => card.folder).filter(Boolean))];\n      setFolders(uniqueFolders);\n    } catch (err) {\n      console.error('Failed to load saved flashcards:', err);\n    }\n  };\n  const handleGenerateFromText = async text => {\n    if (!text.trim()) {\n      setError('No text provided for flashcard generation');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const res = await axios.post('http://localhost:8080/ai/flashcards-from-text', {\n        text: text\n      });\n      const data = res.data;\n      if (Array.isArray(data)) {\n        setFlashcards(data);\n      } else {\n        setFlashcards(JSON.parse(data));\n      }\n      setShowGeneratePrompt(true);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to generate flashcards from text');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGenerateFromPDF = async filename => {\n    if (!filename.trim()) {\n      setError('No filename provided');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const res = await axios.get(`http://localhost:8080/ai/flashcards`, {\n        params: {\n          filename\n        }\n      });\n      const data = res.data;\n      if (Array.isArray(data)) {\n        setFlashcards(data);\n      } else {\n        setFlashcards(JSON.parse(data));\n      }\n      setShowGeneratePrompt(true);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to generate flashcards from PDF');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveFlashcards = async () => {\n    if (flashcards.length === 0) {\n      setError('No flashcards to save');\n      return;\n    }\n    setShowFolderPrompt(true);\n  };\n  const handleConfirmSave = async () => {\n    if (!folderName.trim()) {\n      setError('Please enter a folder name');\n      return;\n    }\n    setSaving(true);\n    setError('');\n    try {\n      // Add folder information to flashcards\n      const flashcardsWithFolder = flashcards.map(card => ({\n        ...card,\n        folder: folderName.trim()\n      }));\n      const response = await axios.post('http://localhost:8080/db/flashcards', flashcardsWithFolder, {\n        headers: getAuthHeaders()\n      });\n\n      // Reload saved flashcards\n      await loadSavedFlashcards();\n\n      // Clear generated flashcards and reset state\n      setFlashcards([]);\n      setFolderName('');\n      setShowFolderPrompt(false);\n      setShowGeneratePrompt(false);\n      alert('Flashcards saved successfully!');\n    } catch (err) {\n      console.error('Failed to save flashcards:', err);\n      setError('Failed to save flashcards. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleDeleteFlashcard = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/db/flashcards/${id}`, {\n        headers: getAuthHeaders()\n      });\n\n      // Reload saved flashcards\n      await loadSavedFlashcards();\n    } catch (err) {\n      console.error('Failed to delete flashcard:', err);\n      setError('Failed to delete flashcard');\n    }\n  };\n  const getFlashcardsByFolder = folder => {\n    return savedFlashcards.filter(card => card.folder === folder);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-white/90 border rounded-2xl shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-extrabold mb-6 text-blue-700 tracking-tight\",\n        children: \"Generate Flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold mb-1 text-blue-900\",\n          children: \"PDF Filename (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter filename (e.g. file.pdf) or leave empty for text input\",\n          value: filename,\n          onChange: e => setFilename(e.target.value),\n          className: \"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: filename ? 'Will generate flashcards from PDF content' : 'Enter text below to generate flashcards from text'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold mb-1 text-blue-900\",\n          children: \"Text Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Paste your text here to generate flashcards...\",\n          className: \"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition\",\n          rows: 4,\n          id: \"textInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: \"Paste text content to generate flashcards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const text = document.getElementById('textInput').value;\n            if (filename) {\n              handleGenerateFromPDF(filename);\n            } else if (text.trim()) {\n              handleGenerateFromText(text);\n            } else {\n              setError('Please provide either a PDF filename or text content');\n            }\n          },\n          className: \"bg-blue-600 hover:bg-blue-700 transition-all duration-200 text-white px-6 py-2 rounded-lg font-semibold shadow flex items-center gap-2 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 disabled:cursor-not-allowed\",\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"animate-spin h-5 w-5 text-white\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              className: \"opacity-25\",\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\",\n              stroke: \"currentColor\",\n              strokeWidth: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              className: \"opacity-75\",\n              fill: \"currentColor\",\n              d: \"M4 12a8 8 0 018-8v8z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), loading ? 'Generating...' : 'Generate Flashcards']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mt-2 font-semibold\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }, this), flashcards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-4 text-blue-700 text-lg\",\n          children: [\"Generated Flashcards (\", flashcards.length, \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-4 grid-cols-1 sm:grid-cols-2\",\n          children: flashcards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-blue-200 p-4 rounded-xl bg-blue-50 shadow-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold text-blue-800 mb-2\",\n              children: [\"Q: \", card.question]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-green-800\",\n              children: [\"A: \", card.answer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), showGeneratePrompt && flashcards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow-xl max-w-md mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4 text-blue-700\",\n          children: \"Flashcards Generated!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-gray-600\",\n          children: [flashcards.length, \" flashcards have been generated. Would you like to save them?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowGeneratePrompt(false),\n            className: \"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-semibold transition\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveFlashcards,\n            className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition\",\n            children: \"Save Flashcards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this), showFolderPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow-xl max-w-md mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4 text-blue-700\",\n          children: \"Save Flashcards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-gray-600\",\n          children: \"Enter a folder name to organize your flashcards:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: folderName,\n          onChange: e => setFolderName(e.target.value),\n          placeholder: \"e.g., Biology Chapter 1, Math Formulas, etc.\",\n          className: \"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowFolderPrompt(false);\n              setFolderName('');\n            },\n            className: \"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-semibold transition\",\n            disabled: saving,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirmSave,\n            className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition flex items-center gap-2\",\n            disabled: saving,\n            children: [saving && /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"animate-spin h-4 w-4 text-white\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                className: \"opacity-25\",\n                cx: \"12\",\n                cy: \"12\",\n                r: \"10\",\n                stroke: \"currentColor\",\n                strokeWidth: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                className: \"opacity-75\",\n                fill: \"currentColor\",\n                d: \"M4 12a8 8 0 018-8v8z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), saving ? 'Saving...' : 'Save']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-white/90 border rounded-2xl shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-extrabold mb-6 text-blue-700 tracking-tight\",\n        children: \"My Saved Flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), savedFlashcards.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 text-center py-8\",\n        children: \"No saved flashcards yet. Generate and save some flashcards to see them here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-blue-200 rounded-xl p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold text-blue-700 mb-4\",\n            children: folder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid gap-4 grid-cols-1 sm:grid-cols-2\",\n            children: getFlashcardsByFolder(folder).map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border-2 border-blue-200 p-4 rounded-xl bg-blue-50 shadow-inner relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteFlashcard(card.id),\n                className: \"absolute top-2 right-2 text-red-600 hover:text-red-800 font-bold text-lg\",\n                title: \"Delete flashcard\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-semibold text-blue-800 mb-2\",\n                children: [\"Q: \", card.question]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-green-800\",\n                children: [\"A: \", card.answer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 23\n              }, this)]\n            }, card.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this)]\n        }, folder, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(Flashcards, \"s39t+E74t1z6SC5RTWBVbC5tS5I=\");\n_c = Flashcards;\nexport default Flashcards;\nvar _c;\n$RefreshReg$(_c, \"Flashcards\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Flashcards","initialContent","initialFilename","_s","filename","setFilename","flashcards","setFlashcards","savedFlashcards","setSavedFlashcards","folders","setFolders","error","setError","loading","setLoading","saving","setSaving","showGeneratePrompt","setShowGeneratePrompt","showFolderPrompt","setShowFolderPrompt","folderName","setFolderName","currentFolder","setCurrentFolder","practiceMode","setPracticeMode","currentCardIndex","setCurrentCardIndex","isFlipped","setIsFlipped","practiceCards","setPracticeCards","length","handleGenerateFromText","getAuthToken","localStorage","getItem","getAuthHeaders","token","loadSavedFlashcards","response","get","headers","data","uniqueFolders","Set","map","card","folder","filter","Boolean","err","console","text","trim","res","post","Array","isArray","JSON","parse","handleGenerateFromPDF","params","handleSaveFlashcards","handleConfirmSave","flashcardsWithFolder","alert","handleDeleteFlashcard","id","delete","getFlashcardsByFolder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","rows","onClick","document","getElementById","disabled","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","index","question","answer","title","_c","$RefreshReg$"],"sources":["C:/Users/bdhru/OneDrive/Desktop/backend/frontend/src/components/Flashcards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Flashcards = ({ initialContent = '', initialFilename = null }) => {\r\n  const [filename, setFilename] = useState(initialFilename || '');\r\n  const [flashcards, setFlashcards] = useState([]);\r\n  const [savedFlashcards, setSavedFlashcards] = useState([]);\r\n  const [folders, setFolders] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [showGeneratePrompt, setShowGeneratePrompt] = useState(false);\r\n  const [showFolderPrompt, setShowFolderPrompt] = useState(false);\r\n  const [folderName, setFolderName] = useState('');\r\n  const [currentFolder, setCurrentFolder] = useState(null);\r\n  const [practiceMode, setPracticeMode] = useState(false);\r\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const [practiceCards, setPracticeCards] = useState([]);\r\n\r\n  // Auto-generate flashcards when initial content is provided\r\n  useEffect(() => {\r\n    if (initialContent && !flashcards.length) {\r\n      handleGenerateFromText(initialContent);\r\n    }\r\n  }, [initialContent]);\r\n\r\n  // Get authentication token\r\n  const getAuthToken = () => {\r\n    return localStorage.getItem('token');\r\n  };\r\n\r\n  // Add authorization header to axios requests\r\n  const getAuthHeaders = () => {\r\n    const token = getAuthToken();\r\n    return {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    };\r\n  };\r\n\r\n  // Load user's saved flashcards and folders on component mount\r\n  useEffect(() => {\r\n    loadSavedFlashcards();\r\n  }, []);\r\n\r\n  const loadSavedFlashcards = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/db/flashcards', {\r\n        headers: getAuthHeaders()\r\n      });\r\n      setSavedFlashcards(response.data);\r\n      \r\n      // Extract unique folders\r\n      const uniqueFolders = [...new Set(response.data.map(card => card.folder).filter(Boolean))];\r\n      setFolders(uniqueFolders);\r\n    } catch (err) {\r\n      console.error('Failed to load saved flashcards:', err);\r\n    }\r\n  };\r\n\r\n  const handleGenerateFromText = async (text) => {\r\n    if (!text.trim()) {\r\n      setError('No text provided for flashcard generation');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const res = await axios.post('http://localhost:8080/ai/flashcards-from-text', {\r\n        text: text\r\n      });\r\n      \r\n      const data = res.data;\r\n      if (Array.isArray(data)) {\r\n        setFlashcards(data);\r\n      } else {\r\n        setFlashcards(JSON.parse(data));\r\n      }\r\n      \r\n      setShowGeneratePrompt(true);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Failed to generate flashcards from text');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateFromPDF = async (filename) => {\r\n    if (!filename.trim()) {\r\n      setError('No filename provided');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const res = await axios.get(`http://localhost:8080/ai/flashcards`, {\r\n        params: { filename },\r\n      });\r\n      \r\n      const data = res.data;\r\n      if (Array.isArray(data)) {\r\n        setFlashcards(data);\r\n      } else {\r\n        setFlashcards(JSON.parse(data));\r\n      }\r\n      \r\n      setShowGeneratePrompt(true);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Failed to generate flashcards from PDF');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveFlashcards = async () => {\r\n    if (flashcards.length === 0) {\r\n      setError('No flashcards to save');\r\n      return;\r\n    }\r\n\r\n    setShowFolderPrompt(true);\r\n  };\r\n\r\n  const handleConfirmSave = async () => {\r\n    if (!folderName.trim()) {\r\n      setError('Please enter a folder name');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    setError('');\r\n    try {\r\n      // Add folder information to flashcards\r\n      const flashcardsWithFolder = flashcards.map(card => ({\r\n        ...card,\r\n        folder: folderName.trim()\r\n      }));\r\n\r\n      const response = await axios.post('http://localhost:8080/db/flashcards', flashcardsWithFolder, {\r\n        headers: getAuthHeaders()\r\n      });\r\n      \r\n      // Reload saved flashcards\r\n      await loadSavedFlashcards();\r\n      \r\n      // Clear generated flashcards and reset state\r\n      setFlashcards([]);\r\n      setFolderName('');\r\n      setShowFolderPrompt(false);\r\n      setShowGeneratePrompt(false);\r\n      \r\n      alert('Flashcards saved successfully!');\r\n    } catch (err) {\r\n      console.error('Failed to save flashcards:', err);\r\n      setError('Failed to save flashcards. Please try again.');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteFlashcard = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/db/flashcards/${id}`, {\r\n        headers: getAuthHeaders()\r\n      });\r\n      \r\n      // Reload saved flashcards\r\n      await loadSavedFlashcards();\r\n    } catch (err) {\r\n      console.error('Failed to delete flashcard:', err);\r\n      setError('Failed to delete flashcard');\r\n    }\r\n  };\r\n\r\n  const getFlashcardsByFolder = (folder) => {\r\n    return savedFlashcards.filter(card => card.folder === folder);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Generate Flashcards Section */}\r\n      <div className=\"p-6 bg-white/90 border rounded-2xl shadow-xl\">\r\n        <h2 className=\"text-2xl font-extrabold mb-6 text-blue-700 tracking-tight\">Generate Flashcards</h2>\r\n        \r\n        <div className=\"mb-6\">\r\n          <label className=\"block font-semibold mb-1 text-blue-900\">PDF Filename (Optional)</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter filename (e.g. file.pdf) or leave empty for text input\"\r\n            value={filename}\r\n            onChange={(e) => setFilename(e.target.value)}\r\n            className=\"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 mt-1\">\r\n            {filename ? 'Will generate flashcards from PDF content' : 'Enter text below to generate flashcards from text'}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <label className=\"block font-semibold mb-1 text-blue-900\">Text Content</label>\r\n          <textarea\r\n            placeholder=\"Paste your text here to generate flashcards...\"\r\n            className=\"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition\"\r\n            rows={4}\r\n            id=\"textInput\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 mt-1\">Paste text content to generate flashcards</p>\r\n        </div>\r\n        \r\n        <div className=\"flex gap-4\">\r\n          <button\r\n            onClick={() => {\r\n              const text = document.getElementById('textInput').value;\r\n              if (filename) {\r\n                handleGenerateFromPDF(filename);\r\n              } else if (text.trim()) {\r\n                handleGenerateFromText(text);\r\n              } else {\r\n                setError('Please provide either a PDF filename or text content');\r\n              }\r\n            }}\r\n            className=\"bg-blue-600 hover:bg-blue-700 transition-all duration-200 text-white px-6 py-2 rounded-lg font-semibold shadow flex items-center gap-2 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 disabled:cursor-not-allowed\"\r\n            disabled={loading}\r\n          >\r\n            {loading && (\r\n              <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8z\"></path>\r\n              </svg>\r\n            )}\r\n            {loading ? 'Generating...' : 'Generate Flashcards'}\r\n          </button>\r\n        </div>\r\n\r\n        {error && <p className=\"text-red-600 mt-2 font-semibold\">{error}</p>}\r\n        \r\n        {flashcards.length > 0 && (\r\n          <div className=\"mt-8\">\r\n            <h3 className=\"font-bold mb-4 text-blue-700 text-lg\">Generated Flashcards ({flashcards.length}):</h3>\r\n            <div className=\"grid gap-4 grid-cols-1 sm:grid-cols-2\">\r\n              {flashcards.map((card, index) => (\r\n                <div key={index} className=\"border-2 border-blue-200 p-4 rounded-xl bg-blue-50 shadow-inner\">\r\n                  <p className=\"font-semibold text-blue-800 mb-2\">Q: {card.question}</p>\r\n                  <p className=\"text-green-800\">A: {card.answer}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Generate Prompt Modal */}\r\n      {showGeneratePrompt && flashcards.length > 0 && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-2xl shadow-xl max-w-md mx-4\">\r\n            <h3 className=\"text-xl font-bold mb-4 text-blue-700\">Flashcards Generated!</h3>\r\n            <p className=\"mb-4 text-gray-600\">\r\n              {flashcards.length} flashcards have been generated. Would you like to save them?\r\n            </p>\r\n            <div className=\"flex gap-4\">\r\n              <button\r\n                onClick={() => setShowGeneratePrompt(false)}\r\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-semibold transition\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleSaveFlashcards}\r\n                className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition\"\r\n              >\r\n                Save Flashcards\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Folder Name Prompt Modal */}\r\n      {showFolderPrompt && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-2xl shadow-xl max-w-md mx-4\">\r\n            <h3 className=\"text-xl font-bold mb-4 text-blue-700\">Save Flashcards</h3>\r\n            <p className=\"mb-4 text-gray-600\">\r\n              Enter a folder name to organize your flashcards:\r\n            </p>\r\n            <input\r\n              type=\"text\"\r\n              value={folderName}\r\n              onChange={(e) => setFolderName(e.target.value)}\r\n              placeholder=\"e.g., Biology Chapter 1, Math Formulas, etc.\"\r\n              className=\"w-full p-3 border-2 border-blue-200 rounded-lg bg-blue-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-300 transition mb-4\"\r\n            />\r\n            <div className=\"flex gap-4\">\r\n              <button\r\n                onClick={() => {\r\n                  setShowFolderPrompt(false);\r\n                  setFolderName('');\r\n                }}\r\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-semibold transition\"\r\n                disabled={saving}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleConfirmSave}\r\n                className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold transition flex items-center gap-2\"\r\n                disabled={saving}\r\n              >\r\n                {saving && (\r\n                  <svg className=\"animate-spin h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8z\"></path>\r\n                  </svg>\r\n                )}\r\n                {saving ? 'Saving...' : 'Save'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Saved Flashcards Section */}\r\n      <div className=\"p-6 bg-white/90 border rounded-2xl shadow-xl\">\r\n        <h2 className=\"text-2xl font-extrabold mb-6 text-blue-700 tracking-tight\">My Saved Flashcards</h2>\r\n        \r\n        {savedFlashcards.length === 0 ? (\r\n          <p className=\"text-gray-600 text-center py-8\">No saved flashcards yet. Generate and save some flashcards to see them here!</p>\r\n        ) : (\r\n          <div className=\"space-y-6\">\r\n            {folders.map((folder) => (\r\n              <div key={folder} className=\"border-2 border-blue-200 rounded-xl p-4\">\r\n                <h3 className=\"text-lg font-bold text-blue-700 mb-4\">{folder}</h3>\r\n                <div className=\"grid gap-4 grid-cols-1 sm:grid-cols-2\">\r\n                  {getFlashcardsByFolder(folder).map((card) => (\r\n                    <div key={card.id} className=\"border-2 border-blue-200 p-4 rounded-xl bg-blue-50 shadow-inner relative\">\r\n                      <button\r\n                        onClick={() => handleDeleteFlashcard(card.id)}\r\n                        className=\"absolute top-2 right-2 text-red-600 hover:text-red-800 font-bold text-lg\"\r\n                        title=\"Delete flashcard\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                      <p className=\"font-semibold text-blue-800 mb-2\">Q: {card.question}</p>\r\n                      <p className=\"text-green-800\">A: {card.answer}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flashcards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}