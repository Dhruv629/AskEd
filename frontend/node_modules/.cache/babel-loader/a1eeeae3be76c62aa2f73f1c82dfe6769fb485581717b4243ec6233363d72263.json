{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bdhru\\\\OneDrive\\\\Desktop\\\\backend\\\\frontend\\\\src\\\\components\\\\Summarizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summarizer = ({\n  prefillText\n}) => {\n  _s();\n  const [inputText, setInputText] = useState(prefillText || '');\n  const handleSummarize = async () => {\n    if (!inputText.trim()) {\n      alert('Please enter some text.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:8080/summarize', {\n        inputText: customPrompt ? `${customPrompt}\\n\\n${inputText}` : inputText\n      });\n      setSummary(res.data);\n    } catch (error) {\n      console.error('Error summarizing:', error);\n      alert('Failed to summarize');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"Summarizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Paste your text here...\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value),\n      rows: 6,\n      className: \"w-full p-2 border mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Optional: Custom prompt\",\n      value: customPrompt,\n      onChange: e => setCustomPrompt(e.target.value),\n      className: \"w-full p-2 border mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSummarize,\n      className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n      children: \"Summarize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2\",\n      children: \"Summarizing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-3 bg-gray-100 border rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-1\",\n        children: \"Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Summarizer, \"yfhY9iSxQzQMFKptu5NfAKXxifA=\");\n_c = Summarizer;\nexport default Summarizer;\nvar _c;\n$RefreshReg$(_c, \"Summarizer\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Summarizer","prefillText","_s","inputText","setInputText","handleSummarize","trim","alert","setLoading","res","post","customPrompt","setSummary","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","rows","type","setCustomPrompt","onClick","loading","summary","_c","$RefreshReg$"],"sources":["C:/Users/bdhru/OneDrive/Desktop/backend/frontend/src/components/Summarizer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Summarizer = ({ prefillText }) => {\r\n const [inputText, setInputText] = useState(prefillText || '');\r\n\r\n  const handleSummarize = async () => {\r\n    if (!inputText.trim()) {\r\n      alert('Please enter some text.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post('http://localhost:8080/summarize', {\r\n        inputText: customPrompt ? `${customPrompt}\\n\\n${inputText}` : inputText,\r\n      });\r\n      setSummary(res.data);\r\n    } catch (error) {\r\n      console.error('Error summarizing:', error);\r\n      alert('Failed to summarize');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 border rounded shadow\">\r\n      <h2 className=\"text-xl font-bold mb-2\">Summarizer</h2>\r\n      <textarea\r\n        placeholder=\"Paste your text here...\"\r\n        value={inputText}\r\n        onChange={(e) => setInputText(e.target.value)}\r\n        rows={6}\r\n        className=\"w-full p-2 border mb-2\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Optional: Custom prompt\"\r\n        value={customPrompt}\r\n        onChange={(e) => setCustomPrompt(e.target.value)}\r\n        className=\"w-full p-2 border mb-2\"\r\n      />\r\n      <button\r\n        onClick={handleSummarize}\r\n        className=\"px-4 py-2 bg-blue-500 text-white rounded\"\r\n      >\r\n        Summarize\r\n      </button>\r\n\r\n      {loading && <p className=\"mt-2\">Summarizing...</p>}\r\n\r\n      {summary && (\r\n        <div className=\"mt-4 p-3 bg-gray-100 border rounded\">\r\n          <h3 className=\"font-semibold mb-1\">Summary:</h3>\r\n          <p>{summary}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summarizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}