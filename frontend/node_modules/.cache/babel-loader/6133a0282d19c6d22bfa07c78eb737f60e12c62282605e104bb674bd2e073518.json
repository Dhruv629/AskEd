{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bdhru\\\\OneDrive\\\\Desktop\\\\backend\\\\frontend\\\\src\\\\components\\\\Summarizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport PdfUploader from './PdfUploader';\nimport PdfTextExtractor from './PdfTextExtractor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summarizer = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [summary, setSummary] = useState('');\n  const [customPrompt, setCustomPrompt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [uploadedFilename, setUploadedFilename] = useState('');\n  const [extractedText, setExtractedText] = useState('');\n  const handleSummarize = async () => {\n    setLoading(true);\n    try {\n      const textToSummarize = extractedText || inputText;\n      if (!textToSummarize) {\n        setSummary('Please provide text or upload and extract from a PDF.');\n        setLoading(false);\n        return;\n      }\n      const inputTextForApi = customPrompt ? `${customPrompt}\\n\\n${textToSummarize}` : textToSummarize;\n      const res = await axios.post('http://localhost:8080/ai/summarize', {\n        inputText: inputTextForApi\n      });\n      setSummary(res.data);\n    } catch (error) {\n      console.error('Error summarizing:', error);\n      setSummary('Failed to summarize.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUploadSuccess = filename => {\n    setUploadedFilename(filename);\n    setExtractedText(''); // reset extracted text on new upload\n  };\n  const handleExtracted = text => {\n    setExtractedText(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white/80 border rounded-xl shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-blue-700\",\n      children: \"Summarize Text or PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium mb-1\",\n        children: \"Paste Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"Paste or type your text here...\",\n        className: \"w-full p-3 border rounded bg-blue-50 focus:bg-white focus:outline-blue-300 transition\",\n        rows: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 mt-1\",\n        children: \"Or upload a PDF below to extract and summarize its content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(PdfUploader, {\n        onUploadSuccess: handleUploadSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), uploadedFilename && !extractedText && /*#__PURE__*/_jsxDEV(PdfTextExtractor, {\n        filename: uploadedFilename,\n        onExtracted: handleExtracted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), uploadedFilename && extractedText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-xs text-green-700\",\n        children: \"PDF extracted and ready for summarization.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium mb-1\",\n        children: [\"Custom Prompt \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-400\",\n          children: \"(optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: customPrompt,\n        onChange: e => setCustomPrompt(e.target.value),\n        placeholder: \"e.g. Summarize in bullet points\",\n        className: \"w-full p-2 border rounded bg-blue-50 focus:bg-white focus:outline-blue-300 transition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 mt-1\",\n        children: \"You can guide the summary style, e.g., \\\"Summarize in 5 bullet points\\\".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSummarize,\n      className: \"bg-green-600 hover:bg-green-700 transition text-white px-6 py-2 rounded-lg font-semibold shadow mb-4 flex items-center gap-2\",\n      disabled: loading,\n      children: [loading && /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"animate-spin h-5 w-5 mr-2 text-white\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"opacity-25\",\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\",\n          stroke: \"currentColor\",\n          strokeWidth: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          className: \"opacity-75\",\n          fill: \"currentColor\",\n          d: \"M4 12a8 8 0 018-8v8z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), loading ? 'Summarizing...' : 'Summarize']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2 text-blue-700 text-lg\",\n        children: \"Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whitespace-pre-wrap p-4 border-2 border-blue-200 rounded-xl bg-blue-50 text-base shadow-inner\",\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Summarizer, \"npl0ssC2notXk1Mhtw6TeETj+Zw=\");\n_c = Summarizer;\nexport default Summarizer;\nvar _c;\n$RefreshReg$(_c, \"Summarizer\");","map":{"version":3,"names":["React","useState","axios","PdfUploader","PdfTextExtractor","jsxDEV","_jsxDEV","Summarizer","_s","inputText","setInputText","summary","setSummary","customPrompt","setCustomPrompt","loading","setLoading","uploadedFilename","setUploadedFilename","extractedText","setExtractedText","handleSummarize","textToSummarize","inputTextForApi","res","post","data","error","console","handleUploadSuccess","filename","handleExtracted","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","onUploadSuccess","onExtracted","type","onClick","disabled","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/Users/bdhru/OneDrive/Desktop/backend/frontend/src/components/Summarizer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport PdfUploader from './PdfUploader';\r\nimport PdfTextExtractor from './PdfTextExtractor';\r\n\r\nconst Summarizer = () => {\r\n  const [inputText, setInputText] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [customPrompt, setCustomPrompt] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploadedFilename, setUploadedFilename] = useState('');\r\n  const [extractedText, setExtractedText] = useState('');\r\n\r\n  const handleSummarize = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const textToSummarize = extractedText || inputText;\r\n      if (!textToSummarize) {\r\n        setSummary('Please provide text or upload and extract from a PDF.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      const inputTextForApi = customPrompt\r\n        ? `${customPrompt}\\n\\n${textToSummarize}`\r\n        : textToSummarize;\r\n      const res = await axios.post('http://localhost:8080/ai/summarize', {\r\n        inputText: inputTextForApi,\r\n      });\r\n      setSummary(res.data);\r\n    } catch (error) {\r\n      console.error('Error summarizing:', error);\r\n      setSummary('Failed to summarize.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUploadSuccess = (filename) => {\r\n    setUploadedFilename(filename);\r\n    setExtractedText(''); // reset extracted text on new upload\r\n  };\r\n\r\n  const handleExtracted = (text) => {\r\n    setExtractedText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white/80 border rounded-xl shadow-lg\">\r\n      <h2 className=\"text-2xl font-bold mb-6 text-blue-700\">Summarize Text or PDF</h2>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block font-medium mb-1\">Paste Text</label>\r\n        <textarea\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          placeholder=\"Paste or type your text here...\"\r\n          className=\"w-full p-3 border rounded bg-blue-50 focus:bg-white focus:outline-blue-300 transition\"\r\n          rows={5}\r\n        />\r\n        <p className=\"text-xs text-gray-500 mt-1\">Or upload a PDF below to extract and summarize its content.</p>\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <PdfUploader onUploadSuccess={handleUploadSuccess} />\r\n        {uploadedFilename && !extractedText && (\r\n          <PdfTextExtractor filename={uploadedFilename} onExtracted={handleExtracted} />\r\n        )}\r\n        {uploadedFilename && extractedText && (\r\n          <div className=\"mt-2 text-xs text-green-700\">PDF extracted and ready for summarization.</div>\r\n        )}\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block font-medium mb-1\">Custom Prompt <span className=\"text-gray-400\">(optional)</span></label>\r\n        <input\r\n          type=\"text\"\r\n          value={customPrompt}\r\n          onChange={(e) => setCustomPrompt(e.target.value)}\r\n          placeholder=\"e.g. Summarize in bullet points\"\r\n          className=\"w-full p-2 border rounded bg-blue-50 focus:bg-white focus:outline-blue-300 transition\"\r\n        />\r\n        <p className=\"text-xs text-gray-500 mt-1\">You can guide the summary style, e.g., \"Summarize in 5 bullet points\".</p>\r\n      </div>\r\n      <button\r\n        onClick={handleSummarize}\r\n        className=\"bg-green-600 hover:bg-green-700 transition text-white px-6 py-2 rounded-lg font-semibold shadow mb-4 flex items-center gap-2\"\r\n        disabled={loading}\r\n      >\r\n        {loading && (\r\n          <svg className=\"animate-spin h-5 w-5 mr-2 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8z\"></path>\r\n          </svg>\r\n        )}\r\n        {loading ? 'Summarizing...' : 'Summarize'}\r\n      </button>\r\n      {summary && (\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"font-semibold mb-2 text-blue-700 text-lg\">Summary:</h3>\r\n          <div className=\"whitespace-pre-wrap p-4 border-2 border-blue-200 rounded-xl bg-blue-50 text-base shadow-inner\">\r\n            {summary}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summarizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}