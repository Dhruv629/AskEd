{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bdhru\\\\OneDrive\\\\Desktop\\\\backend\\\\frontend\\\\src\\\\components\\\\Summarizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Summarizer = ({\n  text\n}) => {\n  _s();\n  const [summary, setSummary] = useState('');\n  const [customPrompt, setCustomPrompt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSummarize = async () => {\n    setLoading(true);\n    try {\n      const inputText = customPrompt ? `${customPrompt}\\n\\n${text}` : text;\n      const res = await axios.post('http://localhost:8080/summarize', {\n        inputText\n      });\n      setSummary(res.data);\n    } catch (error) {\n      console.error('Error summarizing:', error);\n      setSummary('Failed to summarize.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-2\",\n      children: \"Summarize Extracted Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: customPrompt,\n      onChange: e => setCustomPrompt(e.target.value),\n      placeholder: \"Custom prompt (optional)\",\n      className: \"w-full p-2 mb-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSummarize,\n      className: \"bg-green-600 text-white px-4 py-1 rounded mb-4\",\n      disabled: loading,\n      children: loading ? 'Summarizing...' : 'Summarize'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-semibold mt-4\",\n      children: \"Extracted Text:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"whitespace-pre-wrap p-2 border rounded bg-gray-100 max-h-64 overflow-y-auto text-sm\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), summary && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mt-4\",\n        children: \"Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whitespace-pre-wrap p-2 border rounded bg-blue-100 text-sm\",\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Summarizer, \"lxjGKGwAaAxE9klnLmj5hdsQyyM=\");\n_c = Summarizer;\nexport default Summarizer;\nvar _c;\n$RefreshReg$(_c, \"Summarizer\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Summarizer","text","_s","summary","setSummary","customPrompt","setCustomPrompt","loading","setLoading","handleSummarize","inputText","res","post","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/bdhru/OneDrive/Desktop/backend/frontend/src/components/Summarizer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Summarizer = ({ text }) => {\r\n  const [summary, setSummary] = useState('');\r\n  const [customPrompt, setCustomPrompt] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSummarize = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const inputText = customPrompt\r\n        ? `${customPrompt}\\n\\n${text}`\r\n        : text;\r\n\r\n      const res = await axios.post('http://localhost:8080/summarize', {\r\n        inputText,\r\n      });\r\n\r\n      setSummary(res.data);\r\n    } catch (error) {\r\n      console.error('Error summarizing:', error);\r\n      setSummary('Failed to summarize.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 border rounded shadow\">\r\n      <h2 className=\"text-lg font-semibold mb-2\">Summarize Extracted Text</h2>\r\n\r\n      <textarea\r\n        value={customPrompt}\r\n        onChange={(e) => setCustomPrompt(e.target.value)}\r\n        placeholder=\"Custom prompt (optional)\"\r\n        className=\"w-full p-2 mb-2 border rounded\"\r\n      />\r\n\r\n      <button\r\n        onClick={handleSummarize}\r\n        className=\"bg-green-600 text-white px-4 py-1 rounded mb-4\"\r\n        disabled={loading}\r\n      >\r\n        {loading ? 'Summarizing...' : 'Summarize'}\r\n      </button>\r\n\r\n      <h3 className=\"font-semibold mt-4\">Extracted Text:</h3>\r\n      <div className=\"whitespace-pre-wrap p-2 border rounded bg-gray-100 max-h-64 overflow-y-auto text-sm\">\r\n        {text}\r\n      </div>\r\n\r\n      {summary && (\r\n        <>\r\n          <h3 className=\"font-semibold mt-4\">Summary:</h3>\r\n          <div className=\"whitespace-pre-wrap p-2 border rounded bg-blue-100 text-sm\">\r\n            {summary}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summarizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}