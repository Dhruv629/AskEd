{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bdhru\\\\OneDrive\\\\Desktop\\\\backend\\\\frontend\\\\src\\\\components\\\\PdfUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfUploader = ({\n  onTextExtracted\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [status, setStatus] = useState('');\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      setStatus('Uploading...');\n      await axios.post('http://localhost:8080/upload', formData);\n      setStatus('Uploaded successfully.');\n      const res = await axios.get('http://localhost:8080/extract', {\n        params: {\n          filename: selectedFile.name\n        }\n      });\n      const extractedText = res.data.replace(/^Extracted text:\\n/, '');\n      onTextExtracted(extractedText);\n      setStatus('Text extracted and sent to summarizer.');\n    } catch (error) {\n      console.error(error);\n      setStatus('Failed to upload or extract.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded shadow mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"ml-2 px-4 py-2 bg-green-500 text-white rounded\",\n      children: \"Upload & Extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-sm\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfUploader, \"G5nX6x255y6+Tekmr8XL6+hGyI8=\");\n_c = PdfUploader;\nexport default PdfUploader;\nvar _c;\n$RefreshReg$(_c, \"PdfUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PdfUploader","onTextExtracted","_s","selectedFile","setSelectedFile","status","setStatus","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","res","get","params","filename","name","extractedText","data","replace","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bdhru/OneDrive/Desktop/backend/frontend/src/components/PdfUploader.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PdfUploader = ({ onTextExtracted }) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      setStatus('Uploading...');\r\n      await axios.post('http://localhost:8080/upload', formData);\r\n      setStatus('Uploaded successfully.');\r\n\r\n      const res = await axios.get('http://localhost:8080/extract', {\r\n        params: { filename: selectedFile.name },\r\n      });\r\n\r\n      const extractedText = res.data.replace(/^Extracted text:\\n/, '');\r\n      onTextExtracted(extractedText);\r\n      setStatus('Text extracted and sent to summarizer.');\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      setStatus('Failed to upload or extract.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 border rounded shadow mb-4\">\r\n      <h2 className=\"text-xl font-bold mb-2\">Upload PDF</h2>\r\n      <input type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} className=\"ml-2 px-4 py-2 bg-green-500 text-white rounded\">\r\n        Upload & Extract\r\n      </button>\r\n      <p className=\"mt-2 text-sm\">{status}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PdfUploader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,eAAe,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACR,YAAY,EAAE;IAEnB,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,YAAY,CAAC;IAErC,IAAI;MACFG,SAAS,CAAC,cAAc,CAAC;MACzB,MAAMT,KAAK,CAACkB,IAAI,CAAC,8BAA8B,EAAEH,QAAQ,CAAC;MAC1DN,SAAS,CAAC,wBAAwB,CAAC;MAEnC,MAAMU,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,+BAA+B,EAAE;QAC3DC,MAAM,EAAE;UAAEC,QAAQ,EAAEhB,YAAY,CAACiB;QAAK;MACxC,CAAC,CAAC;MAEF,MAAMC,aAAa,GAAGL,GAAG,CAACM,IAAI,CAACC,OAAO,CAAC,oBAAoB,EAAE,EAAE,CAAC;MAChEtB,eAAe,CAACoB,aAAa,CAAC;MAC9Bf,SAAS,CAAC,wCAAwC,CAAC;IAErD,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBlB,SAAS,CAAC,8BAA8B,CAAC;IAC3C;EACF,CAAC;EAED,oBACEP,OAAA;IAAK2B,SAAS,EAAC,gCAAgC;IAAAC,QAAA,gBAC7C5B,OAAA;MAAI2B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDhC,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAE3B;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DhC,OAAA;MAAQoC,OAAO,EAAExB,YAAa;MAACe,SAAS,EAAC,gDAAgD;MAAAC,QAAA,EAAC;IAE1F;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThC,OAAA;MAAG2B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEtB;IAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA3CIF,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}